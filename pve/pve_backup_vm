#!/bin/bash
# Proxmox VE 多虚拟机备份脚本
# 版本：3.1

#################### 配置参数 ####################
VMIDS=(100 101 102 103)               # 需要备份的虚拟机ID数组
BACKUP_STORAGE="local-hdd"        # Proxmox存储名称（通过 pvesm list 查看）
TARGET_DIR="/mnt/vm_backup"       # 备份目标路径
LOG_DIR="/var/log/pve_backups"    # 日志目录
RETENTION_DAYS=3                  # 备份保留天数（N-1天前的备份将被删除）
MAX_PARALLEL=2                    # 最大并行备份任务数
NOTIFY_EMAIL="xxx@xxx.com"  # 通知邮箱（可选）

#################### 初始化设置 ####################
mkdir -p "$TARGET_DIR" "$LOG_DIR"
LOG_FILE="$LOG_DIR/pve_backups_$(date +%Y%m%d).log"

#################### 功能函数 ####################
log() {
    echo "[$(date +'%Y-%m-%d %H:%M:%S')] $*" | tee -a "$LOG_FILE"
}

error_continue() {
    log "VM$1 ERROR: $2"
    [ -n "$NOTIFY_EMAIL" ] && send_notification "$1" "$2"
}

send_notification() {
    local subject="[PVE备份告警] VM$1 备份失败"
    local message="错误详情：$2\n完整日志：$LOG_FILE"
    echo -e "$message" | mail -s "$subject" "$NOTIFY_EMAIL"
}

get_storage_path() {
    local path=$(pvesm status | awk -v storage="$BACKUP_STORAGE" \
        '$1 == storage {print $2}')
    [ -z "$path" ] && path="/var/lib/vz/dump"  # 默认路径
    echo "$path"
}

validate_directory() {
    if [ ! -d "$1" ]; then
        log "FATAL ERROR: 目录不存在 $1"
        exit 1
    fi
    if [ ! -w "$1" ]; then
        log "FATAL ERROR: 目录不可写 $1"
        exit 1
    fi
}

#################### 备份函数 ####################
backup_single_vm() {
    local vmid=$1
    local vm_log="[VM$vmid]"
    local storage_path=$(get_storage_path)
    local tmp_log=$(mktemp)
    
    log "$vm_log ======== 开始备份 ========"

    # 执行备份命令
    if ! vzdump "$vmid" \
        --storage "$BACKUP_STORAGE" \
        --mode stop \
        --compress zstd \
        2>&1 | tee "$tmp_log"
    then
        error_continue "$vmid" "备份命令执行失败"
        rm "$tmp_log"
        return 1
    fi

    # 合并日志
    cat "$tmp_log" | tee -a "$LOG_FILE"

    # 定位备份文件（三重验证机制）
    local backup_file=$(
        # 方法1：解析日志
        grep -iP "creating.*archive.*'?$vmid" "$tmp_log" | \
        grep -oP "'\K[^']+(?=')" || :
        
        # 方法2：文件系统查找
        find "$storage_path" -name "vzdump-$vmid-*.zst" -printf '%T@ %p\n' 2>/dev/null | \
        sort -nr | head -1 | cut -d' ' -f2-
    )

    # 验证文件
    if [ -z "$backup_file" ] || [ ! -f "$backup_file" ]; then
        error_continue "$vmid" "无法定位备份文件\n可能原因：
        1. 存储路径错误：$storage_path
        2. vzdump输出格式变化
        3. 备份任务未生成文件"
        rm "$tmp_log"
        return 1
    fi

    # 复制文件
    if ! cp -v "$backup_file" "$TARGET_DIR" | tee -a "$LOG_FILE"; then
        error_continue "$vmid" "文件复制失败\n可能原因：
        1. 目标磁盘空间不足
        2. 权限问题
        3. 网络存储断开"
        return 1
    fi

    # 验证副本
    local copied_file="${TARGET_DIR}/$(basename "$backup_file")"
    if [ ! -f "$copied_file" ]; then
        error_continue "$vmid" "副本验证失败\n技术细节：
        源文件: $backup_file
        目标文件: $copied_file"
        return 1
    fi

    # 清理旧备份
    log "$vm_log 清理过期备份..."
    
    # 首先列出将要删除的文件
    log "$vm_log 以下文件将被删除（超过 $RETENTION_DAYS 天）："
    find "$TARGET_DIR" -name "vzdump-qemu-$vmid-*.vma.zst" -mtime +$((RETENTION_DAYS-1)) -ls 2>/dev/null
    
    # 执行删除
    find "$TARGET_DIR" -name "vzdump-qemu-$vmid-*.vma.zst" \
        -mtime +$((RETENTION_DAYS-1)) \
        -exec rm -f {} \; 2>/dev/null
    
    # 验证删除结果
    local remaining_files=$(find "$TARGET_DIR" -name "vzdump-qemu-$vmid-*.vma.zst" | wc -l)
    local current_files=$(find "$TARGET_DIR" -name "vzdump-qemu-$vmid-*.vma.zst" -mtime -${RETENTION_DAYS} | wc -l)
    
    log "$vm_log 清理完成统计:"
    log "$vm_log - 当前保留的文件总数: $remaining_files"
    log "$vm_log - ${RETENTION_DAYS}天内的文件数: $current_files"

    log "$vm_log ✅ 备份成功 | 大小: $(du -h "$copied_file" | cut -f1)"
    rm "$tmp_log"
}

#################### 主程序 ####################
validate_directory "$TARGET_DIR"
log "====== 开始批量备份任务 ======"
log "目标VM: ${VMIDS[*]} | 并行数: $MAX_PARALLEL"

# 任务队列管理
declare -A pids
for vmid in "${VMIDS[@]}"; do
    while [ $(jobs -rp | wc -l) -ge $MAX_PARALLEL ]; do
        sleep 1
    done
    backup_single_vm $vmid &
    pids[$!]=$vmid
done

# 等待任务完成
declare -a results
for pid in "${!pids[@]}"; do
    wait $pid
    status=$?
    vmid=${pids[$pid]}
    results+=("VM$vmid: $([ $status -eq 0 ] && echo '成功' || echo '失败')")
done

# 生成报告
log "====== 任务汇总报告 ======"
printf "%-8s %-6s\n" "VMID" "状态" | tee -a "$LOG_FILE"
for result in "${results[@]}"; do
    echo "$result" | awk '{printf "%-8s %-6s\n", $1, $2}' | tee -a "$LOG_FILE"
done

# 在主程序部分，任务汇总报告之后添加清理逻辑
log "====== 开始清理过期备份 ======"

for vmid in "${VMIDS[@]}"; do
    log "[VM$vmid] 清理过期备份..."
    
    # 列出将要删除的文件
    log "[VM$vmid] 以下文件将被删除（超过 $RETENTION_DAYS 天）："
    find "$TARGET_DIR" -name "vzdump-qemu-$vmid-*.vma.zst" -mtime +$((RETENTION_DAYS-1)) -ls
    
    # 执行删除（使用xargs确保命令正确执行）
    find "$TARGET_DIR" -name "vzdump-qemu-$vmid-*.vma.zst" -mtime +$((RETENTION_DAYS-1)) -print0 | \
        xargs -0 -r rm -f
    
    # 验证结果
    deleted_count=$?
    if [ $deleted_count -eq 0 ]; then
        log "[VM$vmid] 成功删除过期备份"
    else
        log "[VM$vmid] 警告：删除过程可能出现问题"
    fi
    
    # 显示当前剩余文件
    current_count=$(find "$TARGET_DIR" -name "vzdump-qemu-$vmid-*.vma.zst" | wc -l)
    log "[VM$vmid] 当前剩余备份文件数: $current_count"
done

log "====== 清理过期备份完成 ======"

# 存储统计
log "存储状态统计："
{
    echo "目标目录内容："
    ls -lh "$TARGET_DIR"
    echo -e "\n磁盘使用情况："
    df -h "$TARGET_DIR" | awk '{printf "%-15s %5s / %5s (%s)\n", $1, $3, $2, $5}'
} | tee -a "$LOG_FILE"

log "====== 备份任务完成 ======"
exit 0
